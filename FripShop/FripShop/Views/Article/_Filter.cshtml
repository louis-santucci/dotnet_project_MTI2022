@model _Filter

<div style="margin-top:15px" class="border">
    @using (Html.BeginForm("Index", "Article", FormMethod.Get))
    {
    <div class="form-horizontal py-2">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Rechercher</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.search, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.search, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Sexe</label>
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.gender, "man") @Html.Label("Homme")
                @Html.RadioButtonFor(model => model.gender, "woman") @Html.Label("Femme")
                @Html.RadioButtonFor(model => model.gender, "unisex") @Html.Label("Unisexe")
                @Html.RadioButtonFor(model => model.gender, "child") @Html.Label("Enfant")
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Catégorie</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.category, new SelectList(Enum.GetValues(typeof(_Filter.Category))), "---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group px-3 row">
            
                <label class="control-label col-2">Prix min</label>
                <div class="col-4">
                    @Html.EditorFor(model => model.minPrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "1"} })
                    @Html.ValidationMessageFor(model => model.minPrice, "", new { @class = "text-danger" })
                </div>
            
                <label class="control-label col-2">Prix max</label>
                <div class="col-4">
                    @Html.EditorFor(model => model.maxPrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "1" } })
                    @Html.ValidationMessageFor(model => model.maxPrice, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Condition minimale</label>
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.conditionMin, "0") @Html.Label("0")
                @Html.RadioButtonFor(model => model.conditionMin, "1") @Html.Label("1")
                @Html.RadioButtonFor(model => model.conditionMin, "2") @Html.Label("2")
                @Html.RadioButtonFor(model => model.conditionMin, "3") @Html.Label("3")
                @Html.RadioButtonFor(model => model.conditionMin, "4") @Html.Label("4")
                @Html.RadioButtonFor(model => model.conditionMin, "5") @Html.Label("5")
                @Html.ValidationMessageFor(model => model.conditionMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Trier par</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.sortBy, new SelectList(Enum.GetValues(typeof(_Filter.Comparison))), "---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sortBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row px-3">
            <label class="control-label col-md-2">Ordre de tri</label>
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.ascending, "true") @Html.Label("Croissant")
                @Html.RadioButtonFor(model => model.ascending, "false") @Html.Label("Décroissant")
                @Html.ValidationMessageFor(model => model.ascending, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row px-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Filter" id="Submit" class="btn btn-default" onclick="filter()" />
            </div>
        </div>

    </div>

    }
</div>

<script type='text/javascript'>
    function filter() {
        //Grab your values
        var gender = document.getElementById('gender').value;
        var category = document.getElementById('category').value;
        var minPrice = document.getElementById('minPrice').value;
        var maxPrice = document.getElementById('maxPrice').value;
        var conditionMin = document.getElementById('conditionMin').value;
        var sortBy = document.getElementById('sortBy').value;
        var ascending = document.getElementById('ascending').value;
        var search = document.getElementById('search').value;

        window.location.href = '?gender=' + gender +
            '?category' + category +
            '?minprice' + minPrice +
            '?maxPrice' + maxPrice +
            '?conditionMin' + conditionMin +
            '?sortBy' + sortBy +
            '?ascending' + ascending +
            '?search' + search;
    }
</script>